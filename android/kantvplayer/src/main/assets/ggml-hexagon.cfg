[general]
#version of ggml-hexagon.cpp on ARM-AP side
version = "1.06"
#version of ggml-dsp.c on cDSP side
ggmldsp_version = "0.63"

#0: HEXAGON_BACKEND_QNNCPU
#1: HEXAGON_BACKEND_QNNGPU
#2: HEXAGON_BACKEND_QNNNPU / HEXAGON_BACKEND_CDSP
#3: default ggml backend
hexagon_backend  = 2
# 0: hwaccel approach through HWACCEL_QNN: offload ggml op to QNN
# 1: hwaccel approach through HWACCEL_QNN_SINGLEGRAPH: mapping entire ggml cgraph to a single QNN graph
# 2: hwaccel approach through HWACCEL_CDSP:offload ggml op to cDSP directly
hwaccel_approach = 2
#
#attention:
#          a. HWACCEL_QNN_SINGLEGRAPH not supported at the moment;
#          b. following combinations are valid:
#             1: hwaccel_approach = 2 AND hexagon_backend = 2(HWACCEL_CDSP, this is the default setting)
#             2: hwaccel_approach = 0 AND hexagon_backend = 2(HWACCEL_QNN, aka QNNNPU)
#             3: hwaccel_approach = 0 AND hexagon_backend = 1(QNNGPU)
#             4: hwaccel_approach = 0 AND hexagon_backend = 0(QNNCPU)
#             5: hwaccel_approach = 2 AND hexagon_backend = 3(fall back to the default ggml backend)
#             6: hwaccel_approach = 0 AND hexagon_backend = 3(fall back to the default ggml backend)
#
#generally speaking,
#          a. we only need to focus on b-1(HWACCEL_CDSP) and b-2(HWACCEL_QNN, aka QNNNPU).
#          b. we can compare Hexagon NPU performance between HWACCEL_CDSP/HWACCEL_QNN(QNNNPU)/the default ggml backend accordingly


#enable/disable offload quantized type mulmat
#quatized type mulmat works fine through HWACCEL_QNN at the moment
#quatized type mulmat doesn't works fine through HWACCEL_CDSP at the moment
#this item will make mulmat performance comprision easily
enable_q_mulmat = 0


# enable/disable print tensors info in op function
print_tensors_info = 0
# enable/disable dump op info in handle_op
dump_op_info = 0


# enable/disable perf of op function
# this is the default setting
enable_perf = 1


# enablie/disable profiler feature to visually compare NPU performance between HWACCEL_CDSP and HWACCEL_QNN
# this is default setting
enable_profiler = 0
#threshold duration of NPU performance profiler, per seconds
profiler_duration = 5
#threshold counst of NPU performance profiler
profiler_counts = 200
#attention:
#          NPU performance might be slower when enable_profiler = 1 because of file I/O in this feature;
#          ensure enable_perf = 1 when set enable_profiler = 1;


#enable/disable pinned-memory feature
enable_pinned_memory = 0

#hwaccel approach through QNN(offload ggml op to QNN-NPU)
[qnn]
# enable/disable QNN SDK's internal log, this will very helpful for troubleshooting in HWACCEL_QNN approach
print_qnn_internal_log = 0

hvx_threads = 8
vtcm_size_in_mb = 8
enable_dlbc = 1
precision_mode = "fp16"


#hwaccel approach through cDSP(offload ggml op to Hexagon cDSP directly)
[cdsp]
#enable/disable rpc ion memory pool
enable_rpc_ion_mempool = 1

#enable/disable offload all quantized type mulmat to cDSP
enable_all_q_mulmat = 0
#attention:
#ensure enable_q_mulmat = 1 when set enable_all_q_mulmat = 1

#enable/disable multi-threading on cDSP side
# 0    disable multi-threading on cDSP side
# 1    disable multi-threading on cDSP side
# 2-8  thread_counts on cDSP side
thread_counts = 1
